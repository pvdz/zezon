#!/usr/bin/env node

let parse = require('./zezon.js');

let testcases = [
  ...['null', 'false', 'true'],


  ...['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
  ...['10', '21', '32', '43', '54', '65', '76', '87', '98', '19'],
  ...['123', '456', '7890'],
  ...['1234567890'],

  ...['.0', '.1', '.2', '.3', '.4', '.5', '.6', '.7', '.8', '.9'],
  ...['.10', '.21', '.32', '.43', '.54', '.65', '.76', '.87', '.98', '.19'],
  ...['.123', '.456', '.7890'],
  ...['.1234567890'],
  ...['.0000'],

  ...['1.', '2.', '3.', '4.', '5.', '6.', '7.', '8.', '9.'],
  ...['10.', '21.', '32.', '43.', '54.', '65.', '76.', '87.', '98.', '19.'],
  ...['123.', '456.', '7890.'],
  ...['1234567890.'],

  ...['1.2', '2.3', '3.4', '4.5', '5.6', '6.7', '7.8', '8.9', '9.10'],
  ...['10.23', '21.45', '32.56', '43.78', '54.98', '65.91', '76.05', '87.04', '98.54', '19.37'],
  ...['123.012', '456.345', '7890.6789'],
  ...['1234567890.0987654321'],

  // with exponent

  ...['0e1', '1e2', '2e3', '3e4', '4e5', '5e6', '6e7', '7e8', '8e9', '9e0'],
  ...['10e10', '21e21', '32e32', '43e43', '54e54', '65e65', '76e79', '87e87', '98e98', '19e19'],
  ...['123e123', '456e456', '7890e789'],
  ...['1234567890e1234567890'],

  ...['.0E10', '.1E23', '.2E0', '.3E4', '.4E78', '.5E00', '.6E75', '.7E54', '.8E77', '.9E14'],
  ...['.10E1', '.21E2', '.32E3', '.43E4', '.54E5', '.65E6', '.76E7', '.87E8', '.98E9', '.19E0'],

  ...['0e-100', '1e-100'],
  ...['0E-100', '1E-100'],
  ...['0.e-100', '1.e-100'],
  ...['0.E-100', '1.E-100'],
  ...['0.1e-100', '1.1e-100'],
  ...['0.1E-100', '1.1E-100'],
  ...['.0e-100', '.1e-100'],
  ...['.0E-100', '.1E-100'],

  ...['0e+100', '1e+100'],
  ...['0E+100', '1E+100'],
  ...['0.e+100', '1.e+100'],
  ...['0.E+100', '1.E+100'],
  ...['0.1e+100', '1.1e+100'],
  ...['0.1E+100', '1.1E+100'],
  ...['.0e+100', '.1e+100'],
  ...['.0E+100', '.1E+100'],

  ...['"stuff"'],

  // array

  ...['[]', '[[]]', '[[[[[[[[[[[[[[]]]]]]]]]]]]]]'],
  ...['[0]', '[1]', '[2]', '[3]', '[4]', '[5]', '[6]', '[7]', '[8]', '[9]'],
  ...['[0,1]', '[1,2]', '[2,3]', '[3,4]', '[4,5]', '[5,6]', '[6,7]', '[7,8]', '[8,9]', '[9,0]'],
  ...['["stuff"]', '["stuff","X"]'],
  ...['[[],"x"]', '[[],0]', '[[],1]', '[[],2]', '[[],3]', '[[],4]', '[[],5]', '[[],6]', '[[],7]', '[[],8]', '[[],9]'],
  ...['[0,[]]', '[0,"v"]'],
  ...['["x",[]]', '["x",0]', '["x",1]', '["x",2]', '["x",3]', '["x",4]', '["x",5]', '["x",6]', '["x",7]', '["x",8]', '["x",9]'],

  // objects

  ...['{}'],
  ...['{"x":0}', '{"x":1}', '{"x":2}', '{"x":3}', '{"x":4}', '{"x":5}', '{"x":6}', '{"x":7}', '{"x":8}', '{"x":9}'],
  ...['{"x":0,}', '{"x":1,}', '{"x":2,}', '{"x":3,}', '{"x":4,}', '{"x":5,}', '{"x":6,}', '{"x":7,}', '{"x":8,}', '{"x":9,}'],
  ...['{"x":0,"y":1}', '{"x":1,"y":2}', '{"x":2,"y":3}', '{"x":3,"y":4}', '{"x":4,"y":5}', '{"x":5,"y":6}', '{"x":6,"y":7}', '{"x":7,"y":8}', '{"x":8,"y":9}', '{"x":9,"y":0}'],
  ...['{"x":0,"y":1,}', '{"x":1,"y":2,}', '{"x":2,"y":3,}', '{"x":3,"y":4,}', '{"x":4,"y":5,}', '{"x":5,"y":6,}', '{"x":6,"y":7,}', '{"x":7,"y":8,}', '{"x":8,"y":9,}', '{"x":9,"y":0,}'],
  ...['{"x":"y"}', '{"x":"y",}', '{"x":"y", "a":"b"}', '{"x":"y", "a":"b",}'],
  ...['{"x":{"x":"y"}}', '{"x":{"x":{"x":{"x":{"x":{"x":{"x":{"x":"y"}}}}}}}}'],

  // mix and match

  ...['{"x":[{"x":"y"}]}', '[{"x":[{"x":[{"x":[{"x":[{"x":[{"x":[{"x":[{"x":[]}]}]}]}]}]}]}]}]'],
];



let passes = 0;
let fails = 0;
testcases.forEach(str => {
  let completed = one(str);

  if (completed) {
    one(' ' + str);
    one('\t' + str);
    one('\n' + str);
    one('\r' + str);
    one(str + ' ');
    one(str + '\t');
    one(str + '\n');
    one(str + '\r');
    // in json a whitespace space is really the same as a whitespace
    // newline or tab BUT not in a string. so just check for spaces here.
    one(str.replace(/([":,{}[\]])/g, ' $1'));
    one(str.replace(/([":,{}[\]])/g, '$1 '));
  }
});
function one(str) {
  let completed = parse(str);
  console.log((completed ? (++passes, 'PASS') : (++fails, 'FAIL')) + ': ' + str);
  return completed;
}

console.log('###\nPassed: ' + passes + ', Failed: ' + fails);
